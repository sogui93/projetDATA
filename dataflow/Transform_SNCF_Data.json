{
	"name": "Transform_SNCF_Data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "datasncf",
						"type": "DatasetReference"
					},
					"name": "transfodata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "repdata",
						"type": "DatasetReference"
					},
					"name": "SinkSNCFProcessed"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Date as string,",
				"          Service as string,",
				"          {Gare de départ} as string,",
				"          {Gare d'arrivée} as string,",
				"          {Durée moyenne du trajet} as string,",
				"          {Nombre de circulations prévues} as string,",
				"          {Nombre de trains annulés} as string,",
				"          {Commentaire annulations} as string,",
				"          {Nombre de trains en retard au départ} as string,",
				"          {Retard moyen des trains en retard au départ} as string,",
				"          {Retard moyen de tous les trains au départ} as string,",
				"          {Commentaire retards au départ} as string,",
				"          {Nombre de trains en retard à l'arrivée} as string,",
				"          {Retard moyen des trains en retard à l'arrivée} as string,",
				"          {Retard moyen de tous les trains à l'arrivée} as string,",
				"          {Commentaire retards à l'arrivée} as string,",
				"          {Nombre trains en retard > 15min} as string,",
				"          {Retard moyen trains en retard > 15 (si liaison concurrencée par vol)} as string,",
				"          {Nombre trains en retard > 30min} as string,",
				"          {Nombre trains en retard > 60min} as string,",
				"          {Prct retard pour causes externes} as string,",
				"          {Prct retard pour cause infrastructure} as string,",
				"          {Prct retard pour cause gestion trafic} as string,",
				"          {Prct retard pour cause matériel roulant} as string,",
				"          {Prct retard pour cause gestion en gare et réutilisation de matériel} as string,",
				"          {Prct retard pour cause prise en compte voyageurs (affluence, gestions PSH, correspondances)} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> transfodata",
				"transfodata select(mapColumn(",
				"          Date,",
				"          Service,",
				"          {Gare de départ},",
				"          {Gare d'arrivée},",
				"          {Retard moyen des trains en retard au départ}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter({Retard moyen des trains en retard au départ}!='') ~> filter1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Date;Service;Gare de départ;Gare d'arrivée;Durée moyenne du trajet;Nombre de circulations prévues;Nombre de trains annulés;Commentaire annulations;Nombre de trains en retard au départ;Retard moyen des trains en retard au départ;Retard moyen de tous les trains au départ;Commentaire retards au départ;Nombre de trains en retard à l'arrivée;Retard moyen des trains en retard à l'arrivée;Retard moyen de tous les trains à l'arrivée;Commentaire retards à l'arrivée;Nombre trains en retard > 15min;Retard moyen trains en retard > 15 (si liaison concurrencée par vol);Nombre trains en retard > 30min;Nombre trains en retard > 60min;Prct retard pour causes externes;Prct retard pour cause infrastructure;Prct retard pour cause gestion trafic;Prct retard pour cause matériel roulant;Prct retard pour cause gestion en gare et réutilisation de matériel;Prct retard pour cause prise en compte voyageurs (affluence} as string,",
				"          { gestions PSH} as string,",
				"          { correspondances)} as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1) ~> SinkSNCFProcessed"
			]
		}
	}
}